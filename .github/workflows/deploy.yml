name: Build and Deploy to EC2

on:
  push:
    branches:
      - master # Triggers the workflow when pushing to the master branch

jobs:
  build:
    runs-on: ubuntu-latest # Use the latest Ubuntu image for the build environment

    steps:
      # Step 1: Checkout the repository's code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Node.js (version 18)
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "18" # Ensure correct Node.js version

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm install

      # Step 4: Compress images
      - name: Compress images
        run: npm run compress-images

      # Step 5: Build the project
      - name: Build the project
        run: npm run build

      # Step 6: Deploy to EC2
      - name: Deploy to EC2
        env:
          PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }} # GitHub secret for your private key
          EC2_IP: ${{ secrets.EC2_IP }} # GitHub secret for your EC2 instance's IP address
          EC2_USER: ${{ secrets.EC2_USER }} # GitHub secret for your EC2 username (e.g., 'ubuntu')
        run: |
          # Set up the SSH key for access
          echo "$PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem

          # Copy the build files to the EC2 instance's specified directory
          scp -i private_key.pem -o StrictHostKeyChecking=no -r build/* $EC2_USER@$EC2_IP:/home/ubuntu/cyo_rugs/cyo-rugs/build

          # Optionally, restart the server or service if needed
          # ssh -i private_key.pem -o StrictHostKeyChecking=no $EC2_USER@$EC2_IP 'sudo systemctl restart your-service'

          # Clean up private key after use
          rm private_key.pem
